[{"title":"Configs","type":0,"sectionRef":"#","url":"docs/config","content":"Configs Springs are configurable and can be tuned. If you want to adjust these settings, you can provide a default config table to useSpring: local styles, api = RoactSpring.useSpring(hooks, { position = UDim2.fromScale(0.5, 0.5), rotation = 0, }, { mass = 10, tension = 100, friction = 50, }) Copy Configs can also be adjusted when animating the spring. If there isn't any config provided, the default config will be used. api.start({ position = UDim2.fromScale(0.5, 0.5), rotation = 0, }, { mass = 10, tension = 100, friction = 50, }) Copy The following configs are available: Property\tDefault\tDescriptionmass\t1\tspring mass tension\t170\tspring energetic load friction\t26\tspring resistence clamp\tfalse\twhen true, stops the spring once it overshoots its boundaries precision\t0.01\thow close to the end result the animated value gets before we consider it to be &quot;there&quot; velocity\t0\tinitial velocity bounce\tnil\tWhen above zero, the spring will bounce instead of overshooting when exceeding its goal value. restVelocity\tnil\tThe smallest velocity before the animation is considered to be &quot;not moving&quot;. When undefined, precision is used instead.","keywords":""},{"title":"SpringValue","type":0,"sectionRef":"#","url":"api/SpringValue","content":"On this page SpringValue Spring values. Generally, you should use the useSpring hook instead of this class.","keywords":""},{"title":"useSpring","type":0,"sectionRef":"#","url":"api/useSpring","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"useSpring","url":"api/useSpring#functions","content":" "},{"title":"useSpring​","type":1,"pageTitle":"useSpring","url":"api/useSpring#useSpring","content":"&lt;/&gt; useSpring.useSpring( hooks: Hook, useSpringProps: useSpringProps ) → ( {[string]: RoactBinding}, api ) "},{"title":"Types","type":1,"pageTitle":"useSpring","url":"api/useSpring##","content":""},{"title":"​","type":1,"pageTitle":"useSpring","url":"api/useSpring#api","content":"interface api { start: () → Promise }   "},{"title":"Introduction","type":0,"sectionRef":"#","url":"docs/intro","content":"Introduction roact-spring is a modern spring-physics based animation library for Roact inspired by react-spring. Instead of fixed durations, it uses physical properties like mass and tension to enable fluid and natural animations.","keywords":""},{"title":"useSpring","type":0,"sectionRef":"#","url":"docs/useSpring","content":"useSpring Defines values into animated values. To get started, initialize the useSpring hook. local styles, api = RoactSpring.useSpring(hooks, { position = UDim2.fromScale(0.3, 0.3), rotation = 0, }, { mass = 10, tension = 100, friction = 50, }) Copy Apply styles to components. return Roact.createElement(&quot;Frame&quot;, { Position = styles.position.value, Rotation = styles.rotation.value, Size = UDim2.fromScale(0.3, 0.3), }) Copy Start animations. api.start({ position = UDim2.fromScale(0.5, 0.5), rotation = 0, }) Copy You can also specify configs for each animation. api.start({ position = UDim2.fromScale(0.5, 0.5), rotation = 0, }, { mass = 10, tension = 100, friction = 50, }) Copy To run tasks after an animation has finished, chain the returned promise with andThen. api.start({ position = UDim2.fromScale(0.5, 0.5), rotation = 0, }):andThen(function() print(&quot;Animation finished!&quot;) end) Copy","keywords":""}]